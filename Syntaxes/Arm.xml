<?xml version="1.0" encoding="UTF-8"?>
<syntax name="arm">
	<meta>
		<name>Arm</name>
		<type>structured</type>
		<preferred-file-extension>s</preferred-file-extension>
	</meta>
	
	<detectors>
		<extension priority="1.0">s,S,asm,sx</extension>
	</detectors>
	
	<indentation>
	</indentation>
	
	<comments>
		<multiline>
			<starts-with>
				<expression>/\*</expression>
			</starts-with>
			<ends-with>
				<expression>\*/</expression>
			</ends-with>
		</multiline>
		<single>
			<expression>@</expression>
		</single>
	</comments>
    
    <brackets>
        <pair open="[" close="]" />
		<pair open="{" close="}" />
		<pair open="(" close=")" />
    </brackets>
    
    <surrounding-pairs>
        <pair open="{" close="}" />
        <pair open="[" close="]" />
        <pair open="(" close=")" />
        <pair open="&apos;" close="&apos;" />
        <pair open="&quot;" close="&quot;" />
    </surrounding-pairs>
	
	<scopes>
		<scope name="arm.keyword.preprocessor">
			<expression>\b(define|include|(end|el|else)?if|if(def|ndef)?|else)(\s(defined\([a-zA-Z_]+\)|[a-zA-Z_\.]+))?</expression>
		</scope>
	
		<scope name="arm.identifier.method.routine">
			<symbol type="method" />
			<expression>^\s*\.?[a-zA-Z0-9]+_?[a-zA-Z0-9]*:</expression>
		</scope>
		
		<scope name="arm.keyword.mnenomic.arithmetic">		
			<expression>\b(?i)(?:v?(?:add|cvt|bic|sub|trn|cmp|div|qdmulh|mrs|mul|ld1|qadd|qshrun|st[1234]|addw|mull|mlal|rshrn|swp|qmovunand|m(?:rs|sr)|eor|sub|rsb|adc|sbc|rsc|and|tst|teq|cmp|cmn|orr|mov|bic|mvn|neg|lsr|lsl|ror|asr)|mul|mla|mull|smlabb|rev(?:8|16)?|pld|adr|adrl|vswp)(?:(?:(?=s)s(\w{2})?)|(\w{2})s?)?(?-i)\b</expression>
			<capture number="1">
				<scope name="arm.keyword">
					<include syntax="self" collection="conditions" />
				</scope>
				<scope name="arm.invalid">
					<expression>\w+</expression>
				</scope>
			</capture>
			<capture number="2">
				<scope name="arm.keyword">
					<include syntax="self" collection="conditions" />
				</scope>
				<scope name="arm.invalid">
					<expression>\w+</expression>
				</scope>
			</capture>
		</scope>
		
		<scope name="arm.keyword.mnenomic.memory">		
			<expression>\b(?i)(?:mov(?:w|t)?|pac(?:dz?[a|b]|ga|i(?:[a|b](?:1716|sp|z)?)|z[a|b])|swi|svc|wfi|dmb|clrex|dsb|isb|v?(?:push|pop)|b(?:l|l?x|l?r)?|(?:i|e)?ret(?:aa|ab)?|(?:st|ld)(?:p|r(?:ex|s?(?:h|b)|d)?|m(?:(?:f|e)(?:d|a)|(?:d|i)(?:b|a))?))(?:(?:(?=s)s(\w{2})?)|(\w{2})s?)?(?-i)\b</expression>
			<capture number="1">
				<scope name="arm.keyword">
					<include syntax="self" collection="conditions" />
				</scope>
				<scope name="arm.invalid">
					<expression>\w+</expression>
				</scope>
			</capture>
			<capture number="2">
				<scope name="arm.keyword">
					<include syntax="self" collection="conditions" />
				</scope>
				<scope name="arm.invalid">
					<expression>\w+</expression>
				</scope>
			</capture>
			<capture number="3">
				<scope name="arm.keyword">
					<include syntax="self" collection="conditions" />
				</scope>
				<scope name="arm.invalid">
					<expression>\w+</expression>
				</scope>
			</capture>
		</scope>
		
		<scope name="arm.definition.directive">
			<expression>\b(?i)(def(b|w|s)|equ|align\s.+\.s)(?-i)\b</expression>
		</scope>
	
		<scope name="arm.keyword.directive.control">
			<expression>\.(?i)(globl|global|extern|weak|macro|endm|purgem|section|text|data|bss|arm|align|balign|irp|rept|endr|(un)?req|error|short|(end)?func|hidden|type|cpu|fpu|arch|code|syntax|altmacro|object_arch|word|int|string|thumb(_set)?|set|pragma|undef|line|get)(?-i)\b</expression>
		</scope>
		
		<scope name="arm.keyword.control.evaluation">
			<expression>\b\=</expression>
		</scope>	
	
		<scope name="arm.comment.nop">
			<expression>\b(?i)nop(\w{2})?(?-i)\b</expression>
			<capture number="1">
				<scope name="arm.comment.nop">
					<include syntax="self" collection="conditions" />
				</scope>
				<scope name="arm.invalid">
					<expression>\w+</expression>
				</scope>
			</capture>
		</scope>

		<scope name="arm.value.memaddress">
			<expression>\[[ \t]*(\w+),[ \t]*([a-zA-Z0-9_\#-]+)[ \t]*\]!?</expression>
			<capture number="1">
				<include syntax="self" collection="registers" />
			</capture>
			<capture number="2">
				<include syntax="self" collection="numerics" />
				<include syntax="self" collection="registers" />
				<include syntax="self" collection="variables" />
			</capture>
		</scope>
	
		<scope name="arm.value.stack">
			<starts-with>
				<expression>\{\h*</expression>
			</starts-with>
			<ends-with>
				<expression>\h*\}\^?</expression>
			</ends-with>
			<subscopes>
				<include syntax="self" collection="registers_list" />
			</subscopes>
		</scope>
	
		<include syntax="self" collection="registers" />
		<include syntax="self" collection="values" />
		<include syntax="self" collection="definitions" />
		<include syntax="self" collection="strings" />
		<include syntax="self" collection="comments" />
	</scopes>
	
	<collections>
		<!-- Identifiers / Registers -->
		<collection name="registers">
			<scope name="arm.identifier.argument.registers">
				<expression>\b(?i)([rcp]([0-9]|1[0-5])|[xwbhsdq]([0-9]|1[0-9]|2[0-9]|3[0-1])|wzr|xzr|wsp|fpsr|fpcr|a[1-4]|v([0-9]|1[0-9]|2[0-9]|3[0-1])\\.(16b|8[b|h]|4[s|h]|2[s|d])|sl|sb|fp|ip|sp|lr|(c|s)psr(_c)?|pc|fpsid|fpscr|fpexc|APSR_nzcv|sy)(?-i)(!|\b)</expression>
			</scope>
		</collection>
		
		<collection name="registers_list">
			<scope name="arm.identifier.argument.registers">
				<expression>(\w+)(?:\h*\-\h*(\w+))?(?:,\h*([a-zA-Z0-9,\-\h]+))?</expression>
				<capture number="1">
					<include syntax="self" collection="registers" />
				</capture>
				<capture number="2">
					<include syntax="self" collection="registers" />
				</capture>
				<capture number="3">
					<include syntax="self" collection="registers_list" />
				</capture>
			</scope>
		</collection>
				
	
		<!-- Definitions -->	
		<collection name="definitions">
			<scope name="arm.variable.name">
				<symbol type="variable" scope="local" />
				<expression>\#?-?([a-zA-Z_][0-9a-zA-Z_]*)\b</expression>
			</scope>
		</collection>	
	
		<!-- Values -->
		<collection name="values">
			<scope name="arm.value.number.hex">
				<expression>\#?(0x|&amp;)[0-9a-fA-F_]+\b</expression>
			</scope>
			<scope name="arm.value.number.dec">
				<expression>\#?[0-9]+\b</expression>
			</scope>
			<scope name="arm.value.number.bin">
				<expression>\#?0b[01]+\b</expression>
			</scope>
		</collection>	
		
		<!-- Strings -->
		<collection name="strings">
			<scope name="arm.string" spell-check="true">
				<starts-with>
					<expression>&quot;</expression>
				</starts-with>
				<ends-with>
					<expression>&quot;</expression>
				</ends-with>
			</scope>
			<scope name="arm.string.char">
				<expression>&apos;\S&apos;</expression>
			</scope>
		</collection>		
				
		<!-- Comments -->
		<collection name="comments">
			<scope name="arm.comment.block" spell-check="true">
				<starts-with>
					<expression>/\*</expression>
				</starts-with>
				<ends-with>
					<expression>\*/</expression>
				</ends-with>
			</scope>
			<scope name="arm.comment" spell-check="true">
				<expression>([@\#;]|//)(.*)$</expression>
				<capture number="2" name="arm.comment.content" />
			</scope>
		</collection>
		
		<!-- Conditions -->
		<collection name="conditions">
			<scope name="arm.keyword.conditions">
				<strings>
					<string>ne</string>
					<string>eq</string>
					<string>cs</string>
					<string>hs</string>
					<string>cc</string>
					<string>lo</string>
					<string>mi</string>
					<string>pl</string>
					<string>vs</string>
					<string>vc</string>
					<string>hi</string>
					<string>ls</string>
					<string>lt</string>
					<string>le</string>
					<string>gt</string>
					<string>ge</string>
					<string>al</string>
				</strings>
			</scope>
		</collection>	
	</collections>
</syntax>
